import asyncio
from data.config import pokemons
from loader import dp
from keyboards.default import keyboard_menu
from aiogram.types import CallbackQuery, InputFile, ReplyKeyboardRemove
from keyboards.inline import inline_kb_menu
from aiogram import types
from aiogram.dispatcher import FSMContext
from utils.db_api.db_asyncpg import *
from aiogram.utils.markdown import hlink
import random


@dp.message_handler(text=['–î–∞!'])
async def are_you_ready_yes(message: types.Message):
    text = '–°—É–ø–µ—Ä, —Ç–æ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ–º!'
    await message.answer(text=text)
    await asyncio.sleep(1.5)
    await magic_forest(message=message)


@dp.message_handler(text=['–ß—Ç–æ-—Ç–æ –º–Ω–µ —Å—Ç—Ä–∞—à–Ω–æ üëâüëà'])
async def are_you_ready_no(message: types.Message):
    msg = await message.answer('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω..', reply_markup=ReplyKeyboardRemove())
    text = '–¢—ã –≤—Å–ø–æ–º–∏–Ω–∞–µ—à—å –ù–∞—Ä—É—Ç–æ, –∫–æ—Ç–æ—Ä—ã–π —É—á–∏–ª –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–¥–∞–≤–∞—Ç—å—Å—è. ' \
           '+10 –∫ –≤–æ–æ–¥—É—à–µ–≤–ª–µ–Ω–∏—é, +15 –∫ —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏–¥—Ç–∏ –≤–ø–µ—Ä—ë–¥ ‚ú®'
    photo = InputFile('files/naruto.jpg')
    markup = keyboard_menu.go_forward

    await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
    await message.answer_photo(caption=text, photo=photo, reply_markup=markup)


@dp.message_handler(text=['–ò–¥—Ç–∏ –≤–ø–µ—Ä—ë–¥!'])
async def magic_forest(message: types.Message):
    msg = await message.answer('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω..', reply_markup=ReplyKeyboardRemove())
    text = '–¢–≤–æ–π –ø—É—Ç—å –ª–µ–∂–∏—Ç —á–µ—Ä–µ–∑ –≤–æ–ª—à–µ–±–Ω—ã–π –ª–µ—Å ‚ú®\n\n–î–µ–ª–∞—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —à–∞–≥–æ–≤ –≤–ø–µ—Ä—ë–¥, —Ç—ã –∑–∞–º–µ—á–∞–µ—à—å —Å–∏—è—é—â–∏–µ –æ–≥–æ–Ω—å–∫–∏. ' \
           '–°–ª–µ–¥—É—è –∑–∞ –Ω–∏–º–∏, —Ç—ã –≤—ã—Ö–æ–¥–∏—à—å –∫ –ø–æ–ª—è–Ω–µ, —É—Å—ã–ø–∞–Ω–Ω–æ–π —Ä–∞–∑–Ω–æ—Ü–≤–µ—Ç–Ω—ã–º–∏ —è–π—Ü–∞–º–∏, ' \
           '–≤ —Ü–µ–Ω—Ç—Ä–µ –∫–æ—Ç–æ—Ä—ã—Ö —Å—Ç–æ–∏—Ç –¥—Ä–µ–≤–Ω—è—è —Å—Ç–∞—Ç—É—è üóø'
    photo = InputFile('files/magic-forest.jpg')
    markup = keyboard_menu.further
    await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
    await message.answer_photo(caption=text, photo=photo, reply_markup=markup)


@dp.message_handler(text=['–î–∞–ª—å—à–µ', '–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞'])
async def further_menu(message: types.Message):
    await message.answer('–ö–∞–∫ —Ç–æ–ª—å–∫–æ —Ç—ã –ø–æ–¥—Ö–æ–¥–∏—à—å –∫ —Å—Ç–∞—Ç—É–µ, —Ä–∞–∑–¥–∞—ë—Ç—Å—è –≥–æ–ª–æ—Å.')
    text = 'üóø: ¬´–í–∏–∂—É –≤ —Ç–µ–±–µ –æ—Ç–≤–∞–≥—É –∏ –¥–æ–±—Ä–æ–µ —Å–µ—Ä–¥—Ü–µ. –ü–æ–±–µ–¥–∏ –∂—É—Ç–∫–æ–≥–æ –º–æ–Ω—Å—Ç—Ä–∞, —á—Ç–æ –æ–±–∏—Ç–∞–µ—Ç –≤ –ø–µ—â–µ—Ä–µ –∏ –ø—É–≥–∞–µ—Ç ' \
           '–≤—Å–µ—Ö –∂–∏—Ç–µ–ª–µ–π –Ω–∞—à–µ–π –¥–µ—Ä–µ–≤–Ω–∏. –í–∑–∞–º–µ–Ω —Ç—ã –ø–æ–ª—É—á–∏—à—å —Å–æ–∫—Ä–æ–≤–∏—â–∞, –ø–æ—á—ë—Ç –∏ —Ä–µ—Å–ø–µ–∫—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π. ' \
           '–û–¥–Ω–æ–º—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –æ–ø–∞—Å–Ω–æ. –û—Ç–∫—Ä–æ–π —Å–≤–æ—é –¥—É—à—É, –∏ –Ω–∞–π–¥—ë—à—å –≤–µ—Ä–Ω–æ–≥–æ –¥—Ä—É–≥–∞¬ª '
    photo = InputFile('files/statue.jpg')
    markup = keyboard_menu.forward

    await asyncio.sleep(1.5)
    await message.answer_photo(caption=text, photo=photo, reply_markup=markup)


@dp.message_handler(text=['–í–ø–µ—Ä—ë–¥!'])
async def forward_menu(message: types.Message):
    text = '–†–∞—Å—Å–∫–∞–∂–∏, –∫—É–¥–∞ –±—ã —Ç—ã –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –æ—Ç–¥—ã—Ö–∞—Ç—å?'
    markup = keyboard_menu.where_to_relax
    await message.answer(text=text, reply_markup=markup)


@dp.message_handler(text=['–ú–æ—Ä–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø–ª—è–∂–Ω—ã–µ —ç–ø–∏–∑–æ–¥—ã —Å–∞–º—ã–µ –≤–µ—Å—ë–ª—ã–µ', '–ì–æ—Ä—ã –∏ –æ–∑–µ—Ä–∞ - –≤–ø–µ—Ä—ë–¥ –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º!', '–ì–æ—Ä–æ–¥, –≥–¥–µ –æ–¥–Ω–∏ –∫–æ—Ç—ã ^^'])
async def capybaras_menu(message: types.Message):
    msg = await message.answer('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω..', reply_markup=ReplyKeyboardRemove())
    user_id = message.from_user.id
    option_number = 1
    if message.text == '–ú–æ—Ä–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø–ª—è–∂–Ω—ã–µ —ç–ø–∏–∑–æ–¥—ã —Å–∞–º—ã–µ –≤–µ—Å—ë–ª—ã–µ':
        await set_test1_results_by_option(user_id=user_id, option_number=option_number, option=1)
    elif message.text == '–ì–æ—Ä—ã –∏ –æ–∑–µ—Ä–∞ - –≤–ø–µ—Ä—ë–¥ –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º!':
        await set_test1_results_by_option(user_id=user_id, option_number=option_number, option=2)
    else:
        await set_test1_results_by_option(user_id=user_id, option_number=option_number, option=3)

    text = '–¢–µ–±—è –ø—Ä–µ–≤—Ä–∞—Ç–∏–ª–∏ –≤ –∫–∞–ø–∏–±–∞—Ä—É. –¢–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è?'
    photo = InputFile('files/capybaras.jpg')
    markup = keyboard_menu.you_are_capybara

    await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
    await message.answer_photo(caption=text, photo=photo, reply_markup=markup)


@dp.message_handler(text=['–ë—É–¥—É —á–∏–ª–ª–∏—Ç—å –Ω–∞ –≤–æ–¥–µ –∏ –≥—Ä–µ—Ç—å—Å—è –Ω–∞ —Å–æ–ª–Ω—ã—à–∫–µ', '–ü–æ–¥—Ä—É–∂—É—Å—å —Å–æ –≤—Å–µ–º–∏ –∂–∏–≤–æ—Ç–Ω—ã–º–∏', '–ö–æ–Ω–µ—á–Ω–æ –∂–µ –±—É–¥—É –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —á—Ç–æ-—Ç–æ –µ—Å—Ç—å! (–æ–º-–Ω–æ–º-–Ω–æ–º)'])
async def capybaras_action_menu(message: types.Message):
    msg = await message.answer('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω..', reply_markup=ReplyKeyboardRemove())
    user_id = message.from_user.id
    option_number = 2
    if message.text == '–ë—É–¥—É —á–∏–ª–ª–∏—Ç—å –Ω–∞ –≤–æ–¥–µ –∏ –≥—Ä–µ—Ç—å—Å—è –Ω–∞ —Å–æ–ª–Ω—ã—à–∫–µ':
        await set_test1_results_by_option(user_id=user_id, option_number=option_number, option=1)
    elif message.text == '–ü–æ–¥—Ä—É–∂—É—Å—å —Å–æ –≤—Å–µ–º–∏ –∂–∏–≤–æ—Ç–Ω—ã–º–∏':
        await set_test1_results_by_option(user_id=user_id, option_number=option_number, option=2)
    else:
        await set_test1_results_by_option(user_id=user_id, option_number=option_number, option=3)

    text = '–¢–≤–æ—è —Ñ—Ä–∞–∑–∞ –ø–æ –∂–∏–∑–Ω–∏'
    markup = keyboard_menu.your_qualities

    await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
    await message.answer(text=text, reply_markup=markup)


@dp.message_handler(text=['–û—Ç–¥–∞–¥–∏–º –Ω–∞—à–∏ —Å–µ—Ä–¥—Ü–∞!', '–õ—É–Ω–Ω–∞—è –ø—Ä–∏–∑–º–∞, –¥–∞–π –º–Ω–µ —Å–∏–ª', '–≠—Ç–æ –º–æ–π –ø—É—Ç—å –Ω–∏–Ω–¥–∑—è'])
async def your_qualities_menu(message: types.Message):
    msg = await message.answer('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω..', reply_markup=ReplyKeyboardRemove())
    user_id = message.from_user.id
    option_number = 3
    if message.text == '–û—Ç–¥–∞–¥–∏–º –Ω–∞—à–∏ —Å–µ—Ä–¥—Ü–∞!':
        await set_test1_results_by_option(user_id=user_id, option_number=option_number, option=1)
    elif message.text == '–õ—É–Ω–Ω–∞—è –ø—Ä–∏–∑–º–∞, –¥–∞–π –º–Ω–µ —Å–∏–ª':
        await set_test1_results_by_option(user_id=user_id, option_number=option_number, option=2)
    else:
        await set_test1_results_by_option(user_id=user_id, option_number=option_number, option=3)

    text = '–ù–∞—Å–∫–æ–ª—å–∫–æ —Ç—ã –∞–∫—Ç–∏–≤–Ω—ã–π?'
    markup = keyboard_menu.you_are_active

    await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
    await message.answer(text=text, reply_markup=markup)


@dp.message_handler(text=['–í–ª–∞–¥–µ—é –æ—Å–æ–±–æ–π —Ç–µ—Ö–Ω–∏–∫–æ–π –Ω–∏–Ω–¥–∑—è: –º–æ–≥—É —Å–ø–∞—Ç—å –≤–µ—Å—å –¥–µ–Ω—å –∏–ª–∏ –Ω–µ—Å—Ç–∏—Å—å –≤–ø–µ—Ä—ë–¥ –∫–∞–∫ –ù–∞—Ä—É—Ç–æ',
                          '–ì–æ—Ç–æ–≤ –ª–µ–∂–∞—Ç—å –≤ –∫—Ä–æ–≤–∞—Ç–∫–µ –≤–µ—á–Ω–æ—Å—Ç—å', '–î–µ–ª–∞—é 100 –¥–µ–ª –≤ —Å–µ–∫—É–Ω–¥—É'])
async def your_qualities_menu(message: types.Message):
    msg = await message.answer('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω..', reply_markup=ReplyKeyboardRemove())
    user_id = message.from_user.id
    option_number = 4
    if message.text == '–í–ª–∞–¥–µ—é –æ—Å–æ–±–æ–π —Ç–µ—Ö–Ω–∏–∫–æ–π –Ω–∏–Ω–¥–∑—è: –º–æ–≥—É —Å–ø–∞—Ç—å –≤–µ—Å—å –¥–µ–Ω—å –∏–ª–∏ –Ω–µ—Å—Ç–∏—Å—å –≤–ø–µ—Ä—ë–¥ –∫–∞–∫ –ù–∞—Ä—É—Ç–æ':
        await set_test1_results_by_option(user_id=user_id, option_number=option_number, option=1)
    elif message.text == '–ì–æ—Ç–æ–≤ –ª–µ–∂–∞—Ç—å –≤ –∫—Ä–æ–≤–∞—Ç–∫–µ –≤–µ—á–Ω–æ—Å—Ç—å':
        await set_test1_results_by_option(user_id=user_id, option_number=option_number, option=2)
    else:
        await set_test1_results_by_option(user_id=user_id, option_number=option_number, option=3)

    results = await get_test1_results(user_id=user_id)
    if None in results:
        await forward_menu(message=message)
        return

    count_option_1 = results.count(1)
    count_option_2 = results.count(2)
    count_option_3 = results.count(3)

    if count_option_1 > count_option_2 and count_option_1 > count_option_3:
        pokemon_id = 1
    elif count_option_2 > count_option_1 and count_option_2 > count_option_3:
        pokemon_id = 2
    elif count_option_3 > count_option_1 and count_option_3 > count_option_2:
        pokemon_id = 3
    else:
        pokemon_id = 4
    await set_test1_pokemon_id(user_id=user_id, pokemon_id=pokemon_id)

    text1 = "–í—Å—ë –≤–æ–∫—Ä—É–≥ –æ–∑–∞—Ä—è–µ—Ç—Å—è —Å–≤–µ—Ç–æ–º –∏ –ø–µ—Ä–µ–¥ —Ç–æ–±–æ–π –ø–æ—è–≤–ª—è–µ—Ç—Å—è –≤–æ–ª—à–µ–±–Ω–æ–µ —è–π—Ü–æ ‚ú®" \
            "\n¬´–¢—É–∫-—Ç—É–∫, –∫—Ç–æ —Ç–∞–º? –ü–æ–∫–µ–º–æ–Ω –≤—ã–±—Ä–∞–ª —Ç–µ–±—è, –æ—Å—Ç–∞–ª–æ—Å—å —É–∑–Ω–∞—Ç—å, –∫—Ç–æ –≤–Ω—É—Ç—Ä–∏¬ª"
    photo1 = InputFile(f'files/pokemon-egg-{pokemon_id}.jpg')
    markup = keyboard_menu.knock_knock

    await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
    await message.answer_photo(caption=text1, photo=photo1, reply_markup=markup)


@dp.message_handler(text=['–¢—É–∫-—Ç—É–∫ üëä'])
async def knock_knock_menu(message: types.Message):
    msg = await message.answer('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω..', reply_markup=ReplyKeyboardRemove())
    user_id = message.from_user.id
    pokemon_id = await get_test1_pokemon_id(user_id=user_id)
    if not pokemon_id:
        await your_qualities_menu(message=message)
        return

    text = pokemons[pokemon_id][1]
    photo = InputFile(f'files/pokemon-{pokemon_id}.jpg')
    markup = keyboard_menu.hooray

    await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
    await message.answer_photo(caption=text, photo=photo, reply_markup=markup)


@dp.message_handler(text=['–£—Ä–∞!'])
async def hooray_menu(message: types.Message):
    msg = await message.answer('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω..', reply_markup=ReplyKeyboardRemove())
    text = '–¢–µ–ø–µ—Ä—å —Ç—ã –≥–æ—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ —Å –Ω–æ–≤—ã–º –¥—Ä—É–≥–æ–º!'
    photo = InputFile('files/cave.jpg')
    markup = keyboard_menu.go_to_cave

    await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
    await message.answer_photo(caption=text, photo=photo, reply_markup=markup)


@dp.message_handler(text=['–í–æ–π—Ç–∏ –≤ –ø–µ—â–µ—Ä—É üë£'])
async def dog_in_cave(message: types.Message):
    await message.answer(text='–ù–µ–ª—å–∑—è –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ –≤–∑—è—Ç—å –∏ –≤–æ–π—Ç–∏ –≤ –ø–æ–¥–∑–µ–º–µ–ª—å–µ. '
                              '–°–Ω–∞—á–∞–ª–∞ —Ç–µ–±–µ –ø—Ä–∏–¥—ë—Ç—Å—è –æ–¥–æ–ª–µ—Ç—å –û–≥–Ω–µ–Ω–Ω—É—é —Å–æ–±–∞–∫—É, –≤–µ—Ä–Ω–æ –æ—Ö—Ä–∞–Ω—è—é—â—É—é –≤—Ö–æ–¥ üî•')
    text = '–ö–∞–∫ –∑–∞—Ç—É—à–∏—Ç—å —Å–æ–±–∞–∫—É? ü§î'
    photo = InputFile('files/dog-in-cave.jpg')
    markup = keyboard_menu.put_out_dog
    await asyncio.sleep(1.5)
    await message.answer_photo(caption=text, photo=photo, reply_markup=markup)


@dp.message_handler(text=['–£–±–µ–∂–∞—Ç—å', '–û–±–ª–∏—Ç—å –≤–æ–¥–æ–π', '–û–±–ª–∏—Ç—å –º–∞—Å–ª–æ–º'])
async def put_out_dog_menu(message: types.Message):
    if message.text == '–£–±–µ–∂–∞—Ç—å':
        text = '–í–µ—á–Ω–æ —É–±–µ–≥–∞—Ç—å –æ—Ç –ø—Ä–æ–±–ª–µ–º –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è. –°—Ä–∞–∂–∞–π—Å—è, –¥—Ä—É–∂–∏—â–µ!!!'
        markup = keyboard_menu.put_out_dog
        await message.answer(text=text, reply_markup=markup)

    elif message.text == '–û–±–ª–∏—Ç—å –º–∞—Å–ª–æ–º':
        text = '–°–æ–±–∞–∫–∞ —Ä–∞–∑–≥–æ—Ä–µ–ª–∞—Å—å –µ—â–µ —Å–∏–ª—å–Ω–µ–µ - –≤—Å–µ –≤–æ–∫—Ä—É–≥ –æ–±—ä—è—Ç–æ –ø–ª–∞–º–µ–Ω–µ–º! –ù—É–∂–Ω–æ –µ–µ –ø–æ—Ç—É—à–∏—Ç—å'
        markup = keyboard_menu.put_out_dog
        await message.answer(text=text, reply_markup=markup)

    else:
        msg = await message.answer('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω..', reply_markup=ReplyKeyboardRemove())

        text = '–£—Ä–∞, —É —Ç–µ–±—è –ø–æ–ª—É—á–∏–ª–æ—Å—å! –°–æ–±–∞–∫–∞ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ç–µ–±—è –≤ –ø–æ–¥–∑–µ–º–µ–ª—å–µ. ' \
               '–¢—ã —Å–ø—É—Å–∫–∞–µ—à—å—Å—è –≥–ª—É–±–∂–µ –∏ –≤–¥–∞–ª–µ–∫–µ –≤–∏–¥–∏—à—å –∏–º–±–æ–≤–æ–≥–æ –º–æ–Ω—Å—Ç—Ä–∞. –û–Ω –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –≤—ã—à–µ —Ç–µ–±—è —É—Ä–æ–≤–Ω–µ–º! ' \
               '–ü–æ—Ö–æ–∂–µ —ç—Ç–æ –∏ –µ—Å—Ç—å —Ç–æ—Ç —Å–∞–º—ã–π –±–æ—Å—Å, –∫–æ—Ç–æ—Ä—ã–π —É–≥—Ä–æ–∂–∞–µ—Ç –≤—Å–µ–π –¥–µ—Ä–µ–≤–Ω–µ üòà'
        photo = InputFile('files/monster-in-cave.jpg')
        markup = keyboard_menu.look_around

        await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
        await message.answer_photo(caption=text, photo=photo, reply_markup=markup)


@dp.message_handler(text=['–û–≥–ª—è–¥–µ—Ç—å—Å—è –ø–æ —Å—Ç–æ—Ä–æ–Ω–∞–º'])
async def statue_in_cave(message: types.Message):
    msg = await message.answer('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω..', reply_markup=ReplyKeyboardRemove())

    text = '–†—è–¥–æ–º —Å —Å–æ–±–æ–π —Ç—ã –∑–∞–º–µ—á–∞–µ—à—å —Å—Ç–∞—Ç—É—é, –ø–æ—Ö–æ–∂—É—é –Ω–∞ —Ç—É, —á—Ç–æ –±—ã–ª–∞ –≤ –ª–µ—Å—É. –ö–∞–∫ —Ç–æ–ª—å–∫–æ —Ç—ã –ø–æ–¥—Ö–æ–¥–∏—à—å –±–ª–∏–∂–µ, ' \
           '—Å—Ç–∞—Ç—É—è –æ–∂–∏–≤–∞–µ—Ç –∏ –≥–æ–≤–æ—Ä–∏—Ç: ¬´–ß—Ç–æ–±—ã –≤—Å—Ç—É–ø–∏—Ç—å –≤ –±–æ–π, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–∫–∞—á–∞—Ç—å –ø–æ–∫–µ–º–æ–Ω–∞. –ü–æ–∫–µ–º–æ–Ω—ã —Å–≤—è–∑–∞–Ω—ã —Å–æ ' \
           '—Å–≤–æ–∏–º–∏ –≤–ª–∞–¥–µ–ª—å—Ü–∞–º–∏, —Ç—ã –º–æ–∂–µ—à—å –¥–∞—Ç—å –µ–º—É –∑–Ω–∞–Ω–∏—è. –ò –æ–Ω —Å–º–æ–∂–µ—Ç –ø–æ–±–µ–¥–∏—Ç—å —Å —Ç–≤–æ–µ–π —Å–∏–ª–æ–π –æ—Ç–∞–∫—É¬ª '
    photo = InputFile('files/statue-in-cave.jpg')
    markup = keyboard_menu.pokemon_upgrade

    await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
    await message.answer_photo(caption=text, photo=photo, reply_markup=markup)


@dp.message_handler(text=['–ü—Ä–æ–∫–∞—á–∞—Ç—å –ø–æ–∫–µ–º–æ–Ω–∞!', "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë", "–î–∞, —è –ø–æ–ø—Ä–æ–±—É—é –µ—â—ë —Ä–∞–∑", "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑"])
async def test2_question1(message: types.Message):
    msg = await message.answer('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω..', reply_markup=ReplyKeyboardRemove())

    text = '–ö–∞–∫–æ–≥–æ –∏–∑ —ç—Ç–∏—Ö –∞–Ω–∏–º–µ –Ω–µ—Ç –≤ –°—Ç—É–¥–∏–∏ Ghibli?'
    markup = keyboard_menu.test2_options_1
    photo = InputFile('files/question1.jpg')

    await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
    await message.answer_photo(caption=text, photo=photo, reply_markup=markup)


@dp.message_handler(text=['–£–Ω–µ—Å—ë–Ω–Ω—ã–µ –≤–µ—Ç—Ä–æ–º', '–ú–æ–π —Å–æ—Å–µ–¥ –¢–æ—Ç–æ—Ä–æ', '–ú–∞–ª—å—á–∏–∫ –∏ –ø—Ç–∏—Ü–∞'])
async def test2_question2(message: types.Message):
    msg = await message.answer('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω..', reply_markup=ReplyKeyboardRemove())

    user_id = message.from_user.id
    option_number = 1
    if message.text == '–£–Ω–µ—Å—ë–Ω–Ω—ã–µ –≤–µ—Ç—Ä–æ–º':
        await set_test2_results_by_option(user_id=user_id, option_number=option_number, option=True)
    else:
        await set_test2_results_by_option(user_id=user_id, option_number=option_number, option=False)

    text = '–ö–∞–∫ –∑–≤–∞–ª–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –≥–µ—Ä–æ—è –≤ –∞–Ω–∏–º–µ ¬´–ö–ª–∏–Ω–æ–∫ —Ä–∞—Å—Å–µ–∫–∞—é—â–∏–π –¥–µ–º–æ–Ω–æ–≤¬ª?'
    markup = keyboard_menu.test2_options_2

    await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
    await message.answer(text=text, reply_markup=markup)


@dp.message_handler(text=['–¢–∞–Ω–¥–∂–∏—Ä–æ', '–ì–æ–Ω–ø–∞—á–∏—Ä–æ', '–ú–æ–Ω–¥–∂–∏—Ä–æ'])
async def test2_question3(message: types.Message):
    msg = await message.answer('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω..', reply_markup=ReplyKeyboardRemove())

    user_id = message.from_user.id
    option_number = 2
    if message.text == '–¢–∞–Ω–¥–∂–∏—Ä–æ':
        await set_test2_results_by_option(user_id=user_id, option_number=option_number, option=True)
    else:
        await set_test2_results_by_option(user_id=user_id, option_number=option_number, option=False)

    text = '–ö–∞–∫–æ–π –∏–∑ —Ö–≤–æ—Å—Ç–∞—Ç—ã—Ö –¥–µ–º–æ–Ω–æ–≤ –±—ã–ª –∑–∞–ø–µ—á–∞—Ç–∞–Ω –≤ –ù–∞—Ä—É—Ç–æ?'
    markup = keyboard_menu.test2_options_3

    await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
    await message.answer(text=text, reply_markup=markup)


@dp.message_handler(text=['–ö—É—Ä–∞–º–∞', '–®—É–∫–∞–∫—É', '–ú–∞—Ç–∞—Ç–∞–±–∏'])
async def test2_question4(message: types.Message):
    msg = await message.answer('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω..', reply_markup=ReplyKeyboardRemove())

    user_id = message.from_user.id
    option_number = 3
    if message.text == '–ö—É—Ä–∞–º–∞':
        await set_test2_results_by_option(user_id=user_id, option_number=option_number, option=True)
    else:
        await set_test2_results_by_option(user_id=user_id, option_number=option_number, option=False)

    text = '–ò–∑ –∫–∞–∫–æ–π –º–∞–Ω–≥–∏ —ç—Ç–æ—Ç –∫–∞–¥—Ä?'
    photo = InputFile('files/question4.png')
    markup = keyboard_menu.test2_options_4

    await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
    await message.answer_photo(caption=text, photo=photo, reply_markup=markup)


@dp.message_handler(text=['–®–∞–º–∞–Ω –ö–∏–Ω–≥', '–ú–∞–≥–∏—á–µ—Å–∫–∞—è –±–∏—Ç–≤–∞', '–ß–µ–ª–æ–≤–µ–∫-–±–µ–Ω–∑–æ–ø–∏–ª–∞'])
async def test2_question4(message: types.Message):
    msg = await message.answer('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω..', reply_markup=ReplyKeyboardRemove())

    user_id = message.from_user.id
    option_number = 4
    if message.text == '–ß–µ–ª–æ–≤–µ–∫-–±–µ–Ω–∑–æ–ø–∏–ª–∞':
        await set_test2_results_by_option(user_id=user_id, option_number=option_number, option=True)
    else:
        await set_test2_results_by_option(user_id=user_id, option_number=option_number, option=False)

    text = '–ß—Ç–æ–±—ã –ø–æ–±–µ–¥–∏—Ç—å —á—É–¥–æ–≤–∏—â–µ, –Ω—É–∂–Ω–æ –æ—Ç–±—Ä–æ—Å–∏—Ç—å —á–µ–ª–æ–≤–µ—á–Ω–æ—Å—Ç—å. –ö—Ç–æ —ç—Ç–æ —Å–∫–∞–∑–∞–ª?'
    markup = keyboard_menu.test2_options_5

    await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
    await message.answer(text=text, reply_markup=markup)


@dp.message_handler(text=['–ê—Ä–º–∏–Ω', '–≠–Ω–Ω–∏', '–≠—Ä–≤–∏–Ω'])
async def test2_question5(message: types.Message):
    msg = await message.answer('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω..', reply_markup=ReplyKeyboardRemove())

    user_id = message.from_user.id
    option_number = 5
    if message.text == '–ê—Ä–º–∏–Ω':
        await set_test2_results_by_option(user_id=user_id, option_number=option_number, option=True)
    else:
        await set_test2_results_by_option(user_id=user_id, option_number=option_number, option=False)

    results = await get_test2_results(user_id=user_id)
    if None in results:
        await test2_question1(message=message)
        return

    true_count = results.count(True)
    probability = 100 if true_count >= 4 else 50 if true_count > 1 else 30
    text = f'–ü—É—Ç–Ω–∏–∫, —Å–µ–π—á–∞—Å —Ç—ã –æ—Ç–≤–µ—Ç–∏–ª –≤–µ—Ä–Ω–æ –Ω–∞ {true_count} –∏–∑ 5 –≤–æ–ø—Ä–æ—Å–æ–≤, ' \
           f'—Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é {probability}% –º–æ–∂–µ—à—å –ø–æ–±–µ–¥–∏—Ç—å –ë–æ—Å—Å–∞.'
    await set_test2_probability(user_id=user_id, probability=probability)
    await message.answer(text=text)

    if true_count > 3:
        text2 = '–ú–æ–ª–æ–¥–µ—Ü! –¢—ã –≥–æ—Ç–æ–≤ –∫ –±–æ—é, –ø—Ä–∏—Å—Ç—É–ø–∞–π'
        markup = keyboard_menu.go_to_fight
    else:
        text2 = '–ü–æ–ø—Ä–æ–±—É–µ—à—å –µ—â—ë —Ä–∞–∑ –ø—Ä–æ–π—Ç–∏ –∏–ª–∏ –≤—Å—Ç—É–ø–∏—à—å –≤ –±–æ–π?'
        markup = keyboard_menu.go_to_fight_again

    await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
    await message.answer(text=text2, reply_markup=markup)


@dp.message_handler(text=["–í—Å—Ç—É–ø–∏—Ç—å –≤ –±–æ–π"])
async def go_to_fight_menu(message: types.Message):
    msg = await message.answer('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω..', reply_markup=ReplyKeyboardRemove())

    user_id = message.from_user.id
    pokemon_id = await get_test1_pokemon_id(user_id=user_id)
    if not pokemon_id:
        await your_qualities_menu(message=message)
        return

    text = f'{pokemons[pokemon_id][0]} –ø—Ä–æ—Ç–∏–≤ –±–æ—Å—Å–∞! –ö—Ç–æ –ø–æ–±–µ–¥–∏—Ç? –û—Å—Ç–∞–ª–æ—Å—å –Ω–∞–Ω–µ—Å—Ç–∏ —Ä–µ—à–∞—é—â–∏–π —É–¥–∞—Ä!'
    photo = InputFile(f'files/boss-vs-pokemon-{pokemon_id}.jpg')
    markup = keyboard_menu.decisive_blow

    await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
    await message.answer_photo(caption=text, photo=photo, reply_markup=markup)


@dp.message_handler(text=["–†–µ—à–∞—é—â–∏–π —É–¥–∞—Ä"])
async def decisive_blow_menu(message: types.Message):
    msg = await message.answer('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω..', reply_markup=ReplyKeyboardRemove())

    user_id = message.from_user.id
    probability = await get_test2_probability(user_id=user_id)
    promocode_probability = 10
    if not probability:
        await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
        await test2_question5(message=message)
        return
    percents = list(range(1, 101))
    random.shuffle(percents)
    chance_to_win = percents[0]

    if chance_to_win <= probability:
        promocode_probability = 20
        pokemon_id = await get_test1_pokemon_id(user_id=user_id)
        if not pokemon_id:
            await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
            await your_qualities_menu(message=message)
            return

        text = '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç–µ–±–µ —É–¥–∞–ª–æ—Å—å –ø–æ–±–µ–¥–∏—Ç—å –º–æ–Ω—Å—Ç—Ä–∞ –∏ —Å–ø–∞—Å—Ç–∏ –¥–µ—Ä–µ–≤–Ω—é! –¢–µ–ø–µ—Ä—å —Ç–µ–±—è –∂–¥—ë—Ç –Ω–∞–≥—Ä–∞–¥–∞ üéâ'
        photo = InputFile(f'files/winner-pokemon-{pokemon_id}.jpg')
        markup = keyboard_menu.my_promocode

    else:
        if await get_count_passed_by_user(user_id=user_id, probability=20) > 0:
            text = '–í —ç—Ç–æ—Ç —Ä–∞–∑ —Ç–µ–±–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–±–µ–¥–∏—Ç—å –±–æ—Å—Å–∞. –¢—ã –º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑.'
        else:
            text = '–í —ç—Ç–æ—Ç —Ä–∞–∑ —Ç–µ–±–µ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–±–µ–¥–∏—Ç—å –º–æ–Ω—Å—Ç—Ä–∞, –æ–¥–Ω–∞–∫–æ —Ç—ã –µ–≥–æ –æ—Å–ª–∞–±–∏–ª –∏ —Ç–µ–ø–µ—Ä—å –∂–∏—Ç–µ–ª–∏ ' \
                   '–¥–µ—Ä–µ–≤–Ω–∏ —Å–º–æ–≥—É—Ç —Å –Ω–∏–º —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è. –¢—ã –º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑ –æ–¥–æ–ª–µ—Ç—å –µ–≥–æ –∏–ª–∏ –∑–∞–±—Ä–∞—Ç—å ' \
                   '—É—Ç–µ—à–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–∑ ‚Äì —Å–∫–∏–¥–∫—É 10% –≤ –º–∞–≥–∞–∑–∏–Ω–µ ORAORA –∏ –∞–Ω–∏–º–µ—à–Ω—ã–π —Å—Ç–∏–∫–µ—Ä–ø–∞–∫ üéÅ'
        photo = InputFile(f'files/monster-win.jpg')
        markup = keyboard_menu.monster_win

    await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
    await message.answer_photo(caption=text, photo=photo, reply_markup=markup)

    await add_to_test_is_passed(user_id=user_id, probability=promocode_probability)
    if await get_user_promocode_probability(user_id=user_id) < promocode_probability:
        promocode_id = await get_free_promocode_by_probability(probability=promocode_probability)
        if promocode_id:
            await set_user_promocode(user_id=user_id, promocode=promocode_id)
        else:
            await message.answer('–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–º–æ–∫–æ–¥—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!')


@dp.message_handler(text=["–ó–∞–±—Ä–∞—Ç—å —É—Ç–µ—à–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–∏–∑", "–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥"])
async def my_promocode_menu(message: types.Message):
    msg = await message.answer('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω..', reply_markup=ReplyKeyboardRemove())

    user_id = message.from_user.id
    mouth = '–∞–ø—Ä–µ–ª—è'

    promocode = await get_user_promocode(user_id=user_id)
    if promocode:
        sticker_id = ''
        sticker_url = ''
        sticker_markup = await inline_kb_menu.url_button(text='–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∏–∫–µ—Ä—ã', url=sticker_url)

        await dp.bot.delete_message(chat_id=message.chat.id, message_id=msg.message_id)
        await message.answer_sticker(sticker=sticker_id)

        promocode_info = await promo_info_by_id(id=promocode)

        if promocode_info["probability"] == 10:
            sticker_text = f'–¢–≤–æ—è –Ω–∞–≥—Ä–∞–¥–∞ ‚Äì <b>—Å–∫–∏–¥–∫–∞ 10%</b>  –≤ –º–∞–≥–∞–∑–∏–Ω–µ ORAORA –ø–æ –ø—Ä–æ–º–æ–∫–æ–¥—É ' \
                           f'<code>{promocode_info["promocode"]}</code> –∏ {hlink("–∞–Ω–∏–º–µ—à–Ω—ã–π —Å—Ç–∏–∫–µ—Ä–ø–∞–∫  üéÅ", sticker_url)}'
            await asyncio.sleep(1)
            await message.answer(text=sticker_text, reply_markup=sticker_markup)
            await asyncio.sleep(1.5)
            await message.answer(text=f'–ü—Ä–æ–º–æ–∫–æ–¥ –º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –¥–æ –∫–æ–Ω—Ü–∞ {mouth} –≤ –æ—Ñ–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω–µ ORAORA. '
                                      f'–ü–æ–∫–∞–∂–∏ —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ –ø—Ä–æ–¥–∞–≤—Ü—É, –∏ –ø–æ–ª—É—á–∏—à—å <b>—Å–∫–∏–¥–∫—É 10%</b> –Ω–∞ –ª—é–±—ã–µ —Ç–æ–≤–∞—Ä—ã! üéâ')

        elif promocode_info["probability"] == 20:
            if await get_count_passed_by_user(user_id=user_id, probability=20) == 1 \
                    and await get_count_passed_by_user(user_id=user_id, probability=10) > 0 \
                    and message.text == '–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥':
                sticker_text = f'–í —ç—Ç–æ—Ç —Ä–∞–∑ —É —Ç–µ–±—è –ø–æ–ª—É—á–∏–ª–æ—Å—å –ø–æ–±–µ–¥–∏—Ç—å –º–æ–Ω—Å—Ç—Ä–∞! ' \
                               f'–í –Ω–∞–≥—Ä–∞–¥—É –º—ã –¥–∞—Ä–∏–º —Ç–µ–±–µ <b>—Å–∫–∏–¥–∫—É 20%</b> –≤ –º–∞–≥–∞–∑–∏–Ω–µ ORAORA –ø–æ –ø—Ä–æ–º–æ–∫–æ–¥—É ' \
                               f'<code>{promocode_info["promocode"]}</code> ' \
                               f'–∏ {hlink("–∞–Ω–∏–º–µ—à–Ω—ã–π —Å—Ç–∏–∫–µ—Ä–ø–∞–∫  üéÅ", sticker_url)}'
            elif await get_count_passed_by_user(user_id=user_id, probability=20) == 1 \
                    and await get_count_passed_by_user(user_id=user_id, probability=10) == 0:
                sticker_text = f'üóø: –¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –æ—Ç–∞–∫—É! –í –Ω–∞–≥—Ä–∞–¥—É –º—ã –¥–∞—Ä–∏–º —Ç–µ–±–µ —Å–∫–∏–¥–∫—É 20% –≤ –º–∞–≥–∞–∑–∏–Ω–µ ORAORA ' \
                               f'–ø–æ –ø—Ä–æ–º–æ–∫–æ–¥—É <code>{promocode_info["promocode"]}</code> ' \
                               f'–∏ {hlink("–∞–Ω–∏–º–µ—à–Ω—ã–π —Å—Ç–∏–∫–µ—Ä–ø–∞–∫  üéÅ", sticker_url)}'
            else:
                sticker_text = f'–£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –Ω–∞–≥—Ä–∞–¥–∞: —Å–∫–∏–¥–∫–∞ 20% –≤ –º–∞–≥–∞–∑–∏–Ω–µ ORAORA –ø–æ –ø—Ä–æ–º–æ–∫–æ–¥—É ' \
                               f'<code>{promocode_info["promocode"]}</code> ' \
                               f'–∏ {hlink("–∞–Ω–∏–º–µ—à–Ω—ã–π —Å—Ç–∏–∫–µ—Ä–ø–∞–∫  üéÅ", sticker_url)}'
            await asyncio.sleep(1)
            await message.answer(text=sticker_text, reply_markup=sticker_markup)
            await asyncio.sleep(1.5)
            await message.answer(text=f'–ü—Ä–æ–º–æ–∫–æ–¥ –º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –¥–æ –∫–æ–Ω—Ü–∞ {mouth} –≤ –æ—Ñ–ª–∞–π–Ω-–º–∞–≥–∞–∑–∏–Ω–µ ORAORA. '
                                      f'–ü–æ–∫–∞–∂–∏ —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥ –ø—Ä–æ–¥–∞–≤—Ü—É, –∏ –ø–æ–ª—É—á–∏—à—å <b>—Å–∫–∏–¥–∫—É 20%</b> –Ω–∞ –ª—é–±—ã–µ —Ç–æ–≤–∞—Ä—ã! üéâ')

        await asyncio.sleep(1.5)
        await message.answer(text=f'–ê–¥—Ä–µ—Å –º–∞–≥–∞–∑–∏–Ω–∞: –≥. –ú–æ—Å–∫–≤–∞, –¢–¶ Avenue SouthWest, –ø—Ä–æ—Å–ø–µ–∫—Ç –í–µ—Ä–Ω–∞–¥—Å–∫–æ–≥–æ, 86–∞. '
                                  f'(–º–µ—Ç—Ä–æ "–Æ–≥–æ-–ó–∞–ø–∞–¥–Ω–∞—è"). –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Å 10 –¥–æ 22 —á–∞—Å–æ–≤.'
                                  f'\n\n–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç —Ç–æ–≤–∞—Ä–æ–≤ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —Å–∞–π—Ç–µ '
                                  f'{hlink("https://www.oraorashop.ru", "https://www.oraorashop.ru/?utm_source=tg&utm_medium=smm&utm_campaign=tg_oraora_quest")}',
                             reply_markup=keyboard_menu.get_out)

    else:
        await decisive_blow_menu(message=message)


@dp.message_handler(text=["–í—ã–π—Ç–∏ –∏–∑ –ø–æ–¥–∑–µ–º–µ–ª—å—è"])
async def get_out_menu(message: types.Message):
    await message.answer('–ë—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è —Å–Ω–æ–≤–∞!', reply_markup=ReplyKeyboardRemove())


@dp.message_handler()
async def randomMessage(message: types.Message):
    await message.answer('ü´§')
